"use strict";function _createForOfIteratorHelper(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,t=function(){};return{s:t,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,i=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){i=!0,o=e},f:function(){try{a||null==r.return||r.return()}finally{if(i)throw o}}}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(r="Object"===r&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}!function(){function i(e){return e=encodeURI(e),document.getElementById(e).querySelector(".leancloud-visitors-count")}function u(e){var o=_toConsumableArray(document.querySelectorAll(".leancloud_visitors")).map(function(e){return decodeURI(e.id)});e("get","/classes/Counter?where=".concat(encodeURIComponent(JSON.stringify({url:{$in:o}})))).then(function(e){return e.json()}).then(function(e){var r,n=e.results,t=_createForOfIteratorHelper(o);try{for(t.s();!(r=t.n()).done;)!function(){var t=r.value,e=n.find(function(e){return e.url===t});i(t).innerText=e?e.time:0}()}catch(e){t.e(e)}finally{t.f()}}).catch(function(e){console.error("LeanCloud Counter Error",e)})}function t(n){function e(e,t,r){return fetch("".concat(n,"/1.1").concat(t),{method:e,headers:{"X-LC-Id":c,"X-LC-Key":l,"Content-Type":"application/json"},body:JSON.stringify(r)})}var t,r,o,a;CONFIG.page.isPost?CONFIG.hostname===location.hostname&&(t=e,r=document.querySelector(".leancloud_visitors"),o=decodeURI(r.id),a=r.dataset.flagTitle,t("get","/classes/Counter?where=".concat(encodeURIComponent(JSON.stringify({url:o})))).then(function(e){return e.json()}).then(function(e){e=e.results;0<e.length?(e=e[0],i(o).innerText=e.time+1,t("put","/classes/Counter/"+e.objectId,{time:{__op:"Increment",amount:1}}).catch(function(e){console.error("Failed to save visitor count",e)})):CONFIG.leancloud_visitors.security?(i(o).innerText="Counter not initialized! More info at console err msg.",console.error("ATTENTION! LeanCloud counter has security bug, see how to solve it here: https://github.com/theme-next/hexo-leancloud-counter-security. \n However, you can still use LeanCloud without security, by setting `security` option to `false`.")):t("post","/classes/Counter",{title:a,url:o,time:1}).then(function(e){return e.json()}).then(function(){i(o).innerText=1}).catch(function(e){console.error("Failed to create",e)})}).catch(function(e){console.error("LeanCloud Counter Error",e)})):1<=document.querySelectorAll(".post-title-link").length&&u(e)}var e=CONFIG.leancloud_visitors,c=e.app_id,l=e.app_key,e=e.server_url,r="-MdYXbMMI"===c.slice(-9)?"https://".concat(c.slice(0,8).toLowerCase(),".api.lncldglobal.com"):e;document.addEventListener("page:loaded",function(){r?t(r):fetch("https://app-router.leancloud.cn/2/route?appId=".concat(c)).then(function(e){return e.json()}).then(function(e){e=e.api_server;t("https://".concat(e))})})}();